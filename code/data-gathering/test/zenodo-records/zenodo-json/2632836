{"conceptrecid":"2632835","created":"2019-04-08T10:51:34.579167+00:00","doi":"10.17632/6wtpgr3kbj.1","files":[{"bucket":"3861a9b1-38de-4dc7-a28e-b35fdab28c13","checksum":"md5:31f25b032f271f76f7918bbcaf809286","key":"alignment_0.6.0_linux.zip","links":{"self":"https://zenodo.org/api/files/3861a9b1-38de-4dc7-a28e-b35fdab28c13/alignment_0.6.0_linux.zip"},"size":6942577940,"type":"zip"},{"bucket":"3861a9b1-38de-4dc7-a28e-b35fdab28c13","checksum":"md5:9b868337a8658e03e70180ec1d25b94f","key":"alignment_0.6.0_linux.zip.sha256","links":{"self":"https://zenodo.org/api/files/3861a9b1-38de-4dc7-a28e-b35fdab28c13/alignment_0.6.0_linux.zip.sha256"},"size":92,"type":"sha256"}],"id":2632836,"links":{"badge":"https://zenodo.org/badge/doi/10.17632/6wtpgr3kbj.1.svg","bucket":"https://zenodo.org/api/files/3861a9b1-38de-4dc7-a28e-b35fdab28c13","doi":"https://doi.org/10.17632/6wtpgr3kbj.1","html":"https://zenodo.org/record/2632836","latest":"https://zenodo.org/api/records/2632836","latest_html":"https://zenodo.org/record/2632836","self":"https://zenodo.org/api/records/2632836"},"metadata":{"access_right":"open","access_right_category":"success","communities":[{"id":"bioexcel"},{"id":"ro"}],"creators":[{"affiliation":"Department of Computing and Information Systems, The University of Melbourne, Australia","name":"Farah Zaib Khan","orcid":"0000-0002-6337-3037"},{"affiliation":"School of Computer Science, The University of Manchester, UK","name":"Stian Soiland-Reyes","orcid":"0000-0001-9842-9718"}],"description":"<p>This dataset folder is a <strong>CWLProv Research Object</strong> that captures the <a href=\"http://commonwl.org/\">Common Workflow Language</a> execution provenance, see <a href=\"https://w3id.org/cwl/prov/0.6.0\">CWLProv 0.6.0</a> or use the <a href=\"https://pypi.org/project/cwlprov/\">cwlprov Python tool</a> to explore.</p>\n\n<p>&nbsp;</p>\n\n<p>The CWL <a href=\"https://w3id.org/cwl/view/git/923ae325fa3a6d3ee3871539c65afa06ac86ac54/aligner/sbg-alignment-cwl/topmed-alignment.cwl\">alignment workflow</a> included in this case study is designed by <a href=\"https://github.com/DataBiosphere\">Data Biosphere</a>. It adapts the alignment pipeline originally developed at Abecasis Lab, The University of Michigan. This <a href=\"https://github.com/FarahZKhan/topmed-workflows/tree/cwlprov_testing\">workflow</a> is part of NIH Data Commons initiative and comprises of four stages.</p>\n\n<p>First step, <strong><em>Pre-align</em></strong><em>,</em> accepts a <em>Compressed Alignment Map</em> (CRAM) file (a compressed format for BAM files developed <em>by European Bioinformatics Institute</em> (EBI)) and human genome reference sequence as input and using underlying software utilities of <strong>SAMtools</strong> such as <em>view</em>, <em>sort</em> and <em>fixmate</em> returns a list of fastq files which can be used as input for the next step.</p>\n\n<p>The next step <strong><em>Align</em></strong> also accepts the human reference genome as input along with the output files from <em>Pre-align</em> and uses <strong>BWA-mem</strong> to generate aligned reads as BAM files. <strong>SAMBLASTER</strong> is used to mark duplicate reads and <strong>SAMtools</strong> view to convert read files from SAM to BAM format.</p>\n\n<p>The BAM files generated after <em>lign</em> are sorted with <strong><em>SAMtool sort</em></strong>&#39;.</p>\n\n<p>Finally, these sorted alignment files are merged to produce single sorted BAM file using SAMtools merge in <strong><em>Post-align</em></strong> step.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Steps to reproduce</strong></p>\n\n<p>This analysis was run using a 16-core Linux cloud instance with 64GB RAM and pre-installed docker.</p>\n\n<ol>\n\t<li>\n\t<p>Install <strong>gsutils</strong><br>\n\t&nbsp;</p>\n\n\t<pre><code class=\"language-bash\">export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\"\n\necho \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | \\\n  sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\n\ncurl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \\\n  sudo apt-key add -\n\nsudo apt-get update &amp;&amp; sudo apt-get install google-cloud-sdk</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<p>Get the data and make the analysis environment ready:<br>\n\t&nbsp;</p>\n\n\t<pre><code class=\"language-bash\">git clone https://github.com/FarahZKhan/topmed-workflows.git\ncd topmed-workflows\ngit checkout cwlprov_testing\ncd aligner/sbg-alignment-cwl\n\n# this is a custom script download google bucket files from json files and create a local json\n# it needs gsutil to be installed though\ngit clone https://github.com/DailyDreaming/fetch_gs_frm_json.git\n\n# Wait... this should download ~18Gb.\npython2.7 fetch_gs_frm_json/dl_gsfiles_frm_json.py topmed-alignment.sample.json\n</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<p>Run the following commands to create the CWLProv Research Object:</p>\n\n\t<pre><code class=\"language-bash\">time cwltool --no-match-user --provenance alignmnentwf0.6.0 --tmp-outdir-prefix=/CWLProv_workflow_testing/intermediate_temp/temp --tmpdir-prefix=/CWLProv_workflow_testing/intermediate_temp/temp topmed-alignment.cwl topmed-alignment.sample.json.new\n\nzip -r alignment_0.6.0_linux.zip alignment_0.6.0_linux\n\nsha256sum alignment_0.6.0_linux.zip &gt; alignment_0.6.0_linux.zip.sha25</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n</ol>","doi":"10.17632/6wtpgr3kbj.1","grants":[{"acronym":"BioExcel","code":"675728","funder":{"acronyms":["EC"],"doi":"10.13039/501100000780","links":{"self":"https://zenodo.org/api/funders/10.13039/501100000780"},"name":"European Commission"},"links":{"self":"https://zenodo.org/api/grants/10.13039/501100000780::675728"},"program":"H2020","title":"Centre of Excellence for Biomolecular Research"}],"keywords":["provenance","workflow","research object","common workflow language","bioinformatics","reproducibility"],"license":{"id":"CC-BY-4.0"},"notes":"Mirror of Mendeley Data upload https://data.mendeley.com/datasets/6wtpgr3kbj/1","publication_date":"2018-12-04","related_identifiers":[{"identifier":"10.5281/zenodo.1208477","relation":"isCitedBy","scheme":"doi"},{"identifier":"https://w3id.org/cwl/prov/0.6.0","relation":"cites","scheme":"url"},{"identifier":"https://github.com/FarahZKhan/topmed-workflows/tree/cwlprov_testing","relation":"hasPart","scheme":"url"},{"identifier":"10.5281/zenodo.1471594","relation":"isCompiledBy","scheme":"doi"},{"identifier":"https://w3id.org/cwl/view/git/923ae325fa3a6d3ee3871539c65afa06ac86ac54/aligner/sbg-alignment-cwl/topmed-alignment.cwl","relation":"isCompiledBy","scheme":"url"},{"identifier":"https://github.com/DataBiosphere","relation":"isSupplementedBy","scheme":"url"},{"identifier":"https://pypi.org/project/cwlprov/","relation":"isSupplementedBy","scheme":"url"},{"identifier":"https://data.mendeley.com/datasets/6wtpgr3kbj/1","relation":"isIdenticalTo","scheme":"url"}],"relations":{"version":[{"count":1,"index":0,"is_last":true,"last_child":{"pid_type":"recid","pid_value":"2632836"},"parent":{"pid_type":"recid","pid_value":"2632835"}}]},"resource_type":{"title":"Dataset","type":"dataset"},"title":"CWL run of Alignment Workflow (CWLProv 0.6.0 Research Object)","version":"1"},"owners":[4363],"revision":4,"stats":{"downloads":13.0,"unique_downloads":10.0,"unique_views":49.0,"version_downloads":13.0,"version_unique_downloads":10.0,"version_unique_views":49.0,"version_views":58.0,"version_volume":69425779676.0,"views":58.0,"volume":69425779676.0},"updated":"2019-04-09T01:33:10.666635+00:00"}