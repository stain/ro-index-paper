{"@context":"https://schema.org/","@id":"https://doi.org/10.7490/f1000research.1115721.1","@type":"CreativeWork","citation":[{"@id":"https://w3id.org/cwl/view/git/886df9de6713e06228d2560c40f451155a196383/tools/tRNA_selection.cwl","@type":"CreativeWork"},{"@id":"https://github.com/common-workflow-language/cwltool","@type":"CreativeWork"},{"@id":"https://doi.org/10.3390/informatics5010011","@type":"CreativeWork"},{"@id":"https://doi.org/10.1101/191783","@type":"CreativeWork"},{"@id":"https://doi.org/10.6084/m9.figshare.3115156.v2","@type":"CreativeWork"},{"@id":"https://doi.org/10.1016/j.future.2011.08.004","@type":"CreativeWork"},{"@id":"http://ceur-ws.org/Vol-903/paper-01.pdf","@type":"CreativeWork"},{"@id":"https://doi.org/10.1016/j.websem.2015.01.003","@type":"CreativeWork"},{"@id":"https://doi.org/10.1371/journal.pone.0080278","@type":"CreativeWork"},{"@id":"https://doi.org/10.1016/j.future.2017.01.008","@type":"CreativeWork"},{"@id":"https://doi.org/10.1186/2041-1480-5-41","@type":"CreativeWork"},{"@id":"https://doi.org/10.1186/s12859-017-1747-0","@type":"CreativeWork"},{"@id":"https://tools.ietf.org/id/draft-kunze-bagit-16","@type":"CreativeWork"},{"@id":"https://doi.org/10.1101/268755","@type":"CreativeWork"},{"@id":"https://doi.org/10.1093/nar/gkx967","@type":"CreativeWork"},{"@id":"https://doi.org/10.17061/phrp2541541","@type":"CreativeWork"},{"@id":"https://doi.org/10.1016/j.ascom.2014.09.002","@type":"CreativeWork"},{"@id":"https://doi.org/10.1371/journal.pcbi.1003285","@type":"CreativeWork"},{"@id":"https://doi.org/10.1126/science.aah6168","@type":"CreativeWork"},{"@id":"https://doi.org/10.1093/nar/gkw1032","@type":"CreativeWork"},{"@id":"https://doi.org/10.1007/11890850_16","@type":"CreativeWork"},{"@id":"https://doi.org/10.1109/eScience.2012.6404482","@type":"CreativeWork"},{"@id":"https://doi.org/10.1016/j.future.2013.09.018","@type":"CreativeWork"}],"creator":[{"@id":"https://orcid.org/0000-0002-6337-3037","@type":"Person","affiliation":"The University of Melbourne, Australia; Common Workflow Language project","name":"Farah Zaib Khan"},{"@id":"https://orcid.org/0000-0001-9842-9718","@type":"Person","affiliation":"The University of Manchester; Common Workflow Language project","name":"Stian Soiland-Reyes"},{"@id":"https://orcid.org/0000-0001-5998-222X","@type":"Person","affiliation":"The University of Melbourne, Australia","name":"Richard O. Sinnott"},{"@id":"https://orcid.org/0000-0002-2006-3856","@type":"Person","affiliation":"The University of Melbourne, Australia","name":"Andrew Lonie"},{"@id":"https://orcid.org/0000-0002-2961-9670","@type":"Person","affiliation":"Common Workflow Language project","name":"Michael R. Crusoe"}],"datePublished":"2018-06-27","description":"<ul>\n\t<li><a href=\"https://gccbosc2018.sched.com/event/FIDb/b43-cwlprov-interoperable-retrospective-provenance-capture-and-its-challenges\">Presented</a> at <a href=\"https://www.open-bio.org/wiki/BOSC\">Bioinformatics Open Source Conference</a> <a href=\"https://gccbosc2018.sched.com/\">(BOSC) 2018</a></li>\n\t<li>Source Code snapshot:&nbsp;<a href=\"https://github.com/common-workflow-language/cwltool/tree/921fc1d387930a0a5fede332c43f039697f6a4de\">https://github.com/common-workflow-language/cwltool/tree/921fc1d387930a0a5fede332c43f039697f6a4de</a></li>\n\t<li>License: <a href=\"https://www.apache.org/licenses/LICENSE-2.0\">https://www.apache.org/licenses/LICENSE-2.0</a></li>\n\t<li>Research Object: <a href=\"https://doi.org/10.5281/zenodo.1215611\">https://doi.org/10.5281/zenodo.1215611</a></li>\n</ul>\n\n<p><strong>Abstract</strong>&nbsp;(accepted for poster and talk at BOSC2018)<br>\n<br>\nThe automation of data analysis in the form of scientific workflows is a widely adopted practice in many fields of research nowadays. Computationally driven data-intensive experiments using workflows enable Automation, Scaling, Adaption and Provenance support (ASAP). However, there are still a number of challenges associated with the effective <em>sharing</em>, <em>publication</em>, <em>understandability</em> and <em>reproducibility </em>of such workflows due to the incomplete capture of provenance and the dependence on the particular technical (software) platforms.<br>\n<br>\nWe present <a href=\"https://doi.org/10.5281/zenodo.1215611\">CWLProv</a>, an approach for retrospective provenance-capture utilizing open source community-driven standards involving application and customization of workflow-centric Research Objects (ROs). The ROs are produced as an output of a workflow enactment defined in the Common Workflow Language (CWL) using reference implementation <a href=\"https://github.com/common-workflow-language/cwltool\">cwltool</a>.<br>\n<br>\nThe approach aggregates and annotates all the resources involved in the scientific investigation including inputs, outputs, workflow specification, command line tool specifications and input parameter settings. The resources are linked within the RO to enable re-enactment of an analysis without depending on external resources. The workflow provenance profile is represented in W3C standardized <a href=\"https://www.w3.org/TR/prov-n/\">PROV-N</a> and <a href=\"https://www.w3.org/Submission/prov-json/\">PROV-JSON</a> format and captures retrospective provenance of the workflow enactment.<br>\n<br>\nThe workflow-centric RO produced as an output of a CWL workflow enactment is expected to be interoperable, reusable, shareable and portable across different platforms. Our work describes the need and motivation for CWLProv and the lessons learned in applying it for ROs using CWL in the bioinformatics domain. The complete capture of provenance along with the aggregated resources used in a workflow enactment will mitigate the workflow decay and allow applications of provenance to make experiments transparent, reproducible and authentic.<br>\n<br>\nWe believe that underlying principles of the standards utilized to implement CWLProv will result in a semantically rich executable workflow objects such that any platform supporting CWL and CWLProv will be able to reproduce them. We ultimately aim to achieve a solution that is compliant with all four dimensions of FAIR principles. Currently CWLProv is implemented using the reference implementation, <em>cwltool</em>. This study can further be extended to support Provenance Capture on other platforms supporting CWL to demonstrate interoperability of analysis methods.</p>","identifier":"https://doi.org/10.7490/f1000research.1115721.1","inLanguage":{"@type":"Language","alternateName":"eng","name":"English"},"keywords":["research object","scientific workflow","workflow, provenance, prov, cwl, interoperability, linked data"],"license":"http://creativecommons.org/licenses/by/4.0/legalcode","name":"CWLProv \u2013 Interoperable retrospective provenance capture and its challenges","sameAs":["https://f1000research.com/posters/7-916"],"url":"https://zenodo.org/record/1304969"}